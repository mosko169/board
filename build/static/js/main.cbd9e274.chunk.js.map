{"version":3,"sources":["index.js"],"names":["__webpack_require__","r","__webpack_exports__"],"mappings":"6HAAAA,EAAAC,EAAAC,GAAAF,EAAA,IAAAA,EAAA","file":"static/js/main.cbd9e274.chunk.js","sourcesContent":["import io from 'socket.io-client'; \nimport {$} from 'jquery';\n\n\n\n  function loadCanvas(clientid, sessionId) {\n    var App;\n    App = {};\n    /*\n        Init \n    */\n    function renderCanvas(canvasCtx, canvasBuff) {\n  \n      var blob = new Blob([canvasBuff], {type: 'image/png'});\n      var url = URL.createObjectURL(blob);\n      var img = new Image;\n  \n      img.onload = function() {\n          canvasCtx.drawImage(this, 0, 0);\n          URL.revokeObjectURL(url);\n      }\n      img.src = url;\n    }\n  \n  \n    App.init = function() {\n      App.canvas = document.createElement('canvas');\n      App.canvas.className = 'canvas';\n      App.canvas.height = 600;\n      App.canvas.width = 1000;\n      document.getElementsByTagName('article')[0].appendChild(App.canvas);\n      App.ctx = App.canvas.getContext(\"2d\");\n      App.ctx.fillStyle = \"solid\";\n      App.ctx.strokeStyle = \"#333\";\n      App.ctx.lineWidth = 2;\n      App.ctx.lineCap = \"round\";\n      App.socket =  io.connect('http://localhost:3000/clients?clientId=' + clientid+ '&sessionId='+ sessionId);\n      App.socket.on('canvas', canvasBuff => {\n        renderCanvas(App.ctx, canvasBuff);\n      })\n      App.socket.on('draw', function(data) {\n        return App.draw(data.x, data.y, data.type);\n      });\n      App.draw = function(x, y, type) {\n        if (type === \"dragstart\") {\n          App.ctx.beginPath();\n          return App.ctx.moveTo(x, y);\n        } else if (type === \"drag\") {\n          App.ctx.lineTo(x, y);\n          return App.ctx.stroke();\n        } else {\n          return App.ctx.closePath();\n        }\n      };\n    };\n    /*\n        Draw Events\n    */\n    $('canvas').on('drag dragstart dragend', function(e) {\n      var offset, type, x, y;\n      type = e.handleObj.type;\n      offset = $(this).offset();\n      e.offsetX = e.layerX - offset.left;\n      e.offsetY = e.layerY - offset.top;\n      x = e.offsetX;\n      y = e.offsetY;\n      App.draw(x, y, type);\n      App.socket.emit('drawClick', {\n        x: x,\n        y: y,\n        type: type\n      });\n    });\n    $(function() {\n      return App.init();\n    });\n  }\n\n\n\n  var screenShopButton = function(){\n    var button = document.createElement('button');\n    button.innerHTML = 'Screen Shot';\n    button.className = \"btn btn-primary\";\n    button.onclick = function(){\n      screenShotAction('mycanvas.png');\n    };\n    document.body.appendChild(button);\n  };\n  \n  function screenShotAction(filename){    //download the img\n    var canvas = document.getElementsByClassName('canvas')[0];\n    var lnk = document.createElement('a'), e;\n    lnk.download = filename;\n    lnk.href = canvas.toDataURL(\"image/png;base64\");\n    /// create a \"fake\" click-event to trigger the download\n    e = document.createEvent(\"MouseEvents\");\n    e.initMouseEvent(\"click\", true, true, window,\n                      0, 0, 0, 0, 0, false, false, false,\n                      false, 0, null);\n  \n    lnk.dispatchEvent(e);\n  };"],"sourceRoot":""}